@model eAMS.Models.Models.PropRegi

<div class="container" style="margin-top: 3%">
    <div class="row">
        <a href="#" class="btn btn-info" onclick="AddNewProperty()">Add New Property</a>
        <div class="form-group">
            <label>Find by Name:</label>
            <input id="SearchProperty" class="input-sm" type="text" onkeyup="FindProperty()" placeholder="Search for Property" />
        </div>
    </div>
    
    <br /><br />

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Property Name</th>
                <th>Property Code</th>
                <th>Property Brand</th>
                <th>Property Year</th>
                <th>Need Maintained?</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="SetPropertyList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <div class="modal fade" id="AlterModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="AlterModal-Title"></h4>
                </div>
                <div class="modal-body">
                    <form id="form" class="col-sm-offset-3">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(m => m.ID, new { @id = "PropId" })
                            <div class="form-group">
                                <label for="Name">Property Name:</label>
                                @Html.TextBoxFor(m => m.Name, new { @id = "PropName", @class = "form-control", @placeholder = "Property Name" })
                            </div>
                            <div class="form-group">
                                <label for="Code">Property Code:</label>
                                @Html.TextBoxFor(m => m.Code, new { @id = "PropCode", @class = "form-control", @placeholder = "Property Code" })
                            </div>
                            <div class="form-group">
                                <label for="Brand">Property Brand:</label>
                                @Html.TextBoxFor(m => m.Brand, new { @id = "PropBrand", @class = "form-control", @placeholder = "Property Brand" })
                            </div>
                            <div class="form-group">
                                <label for="Year">Property Release Year:</label>
                                @Html.TextBoxFor(m => m.Year, new { @id = "PropYear", @class = "form-control", @placeholder = "Property Release Year" })
                            </div>
                            <div class="form-group">
                                <label for="Maintain">Need Maintained?</label>
                                @Html.CheckBoxFor(m=>m.IsMaitained, new { @id="PropIMain", @class="form-control"})
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-default" data-dismiss="modal">Close</a>
                    <a class="btn btn-danger" id="SaveProperty">Save Changes</a>
                </div>
            </div>
        </div>
    </div>

    <div id="DeleteConfirmation" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Delete Property</h4>
                </div>
                <div class="modal-body">
                    <h4>Are you sure? This process cannot be undone!</h4>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-default" data-dismiss="modal">Close</a>
                    <a class="btn btn-danger" onclick="ConfirmDelete()">Delete</a>
                </div>
            </div>
        </div>
    </div>

    <div id="Paged"></div>
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    //$.get("/Property/GetPropertyList", null, DataBinding);
    $(document).ready(function () {
        GetPageData(1);
    });
    $("#AlterModal").on("hidden.bs.modal", (e) => {
        e.preventDefault();
        $("#form")[0].reset();
    });

    function DataBinding(PropertyList) {
        const SetData = $("#SetPropertyList");
        for (let i = 0; i < PropertyList.length; ++i) {
            const Data = `<tr class="row_${PropertyList[i].ID}">
                <td>${PropertyList[i].Name}</td>
                <td>${PropertyList[i].Code}</td>
                <td>${PropertyList[i].Brand}</td>
                <td>${PropertyList[i].Year}</td>
                <td>${PropertyList[i].IsMaitained ? "true" : "false"}</td>
                <td><a class="btn btn-info" onclick="EditProperty(${PropertyList[i].ID})">Edit</a></td>
                <td><a class="btn btn-danger" onclick="DeleteProperty(${PropertyList[i].ID})">Delete</a></td>
                </tr>`
            SetData.append(Data);
        }

    }

    function AddNewProperty() {
        $("#form")[0].reset();
        $("#PropId").val(0);
        $("#AlterModal-Title").html("Add New Property");
        $("#AlterModal").modal("show");
    }

    function EditProperty(PropertyId) {
        const url = `/Property/GetPropertyById?PropertyId=${PropertyId}`;
        $("#AlterModal-Title").html("Update Property");
        $("#AlterModal").modal("show");
        $.ajax({
            type: "GET",
            url: url,
            success: (data) => {
                $("#PropId").val(data.ID);
                $("#PropName").val(data.Name);
                $("#PropCode").val(data.Code);
                $("#PropBrand").val(data.Brand);
                $("#PropYear").val(data.Year);
                $("#PropIMain").val(data.IsMaitained);
            },
            error: (err) => {
                console.log(`Error: ${err}`);
            }
        })
    }

    $("#SaveProperty").click(() => {
        const data = $("#SubmitForm").serialize();
        console.log(data);
        const url = "/Property/SavePropertyToDb";
        $.ajax({
            type: "POST",
            url: url,
            data: data,
            success: (data) => {
                alert("Success!");
                window.location.href = "/Property/Index";
                $("#AlterModal").modal("hide");
            },
            error: (err) => {
                console.log(`Error: ${err}`);
            }
        });
    });

    function DeleteProperty(PropertyId) {
        $("#PropId").val(PropertyId);
        $("#DeleteConfirmation").modal("show");
    }

    function ConfirmDelete() {
        const propertyId = $("#PropId").val();
        const url = `/Property/DeleteProperty?PropertyId=${propertyId}`;
        $.ajax({
            type: "POST",
            url: url,
            success: () => {
                $("#DeleteConfirmation").modal("hide");
                $(`#row_${propertyId}`).remove();
                window.location.href = "/Property/Index";
            },
            error: (err) => {
                console.log(`Error: ${err}`);
            }
        });
    }

    function FindProperty() {
        let searchString = $("#SearchProperty").val().toLowerCase();
        const SetData = $("#SetPropertyList");
        const url = `/Property/SearchPropetyByName?PropertyName=${searchString}`;

        SetData.empty();

        $.ajax({
            type: 'GET',
            url: url,
            success: (data) => {
                if (data.length === 0) {
                    SetData.append(`<tr style="color:red"><td colspan="6">No Match Data</td></tr>`);
                }
                else {
                    DataBinding(data);
                }
            },
            error: (err) => {
                console.log(err);
            }
        });
    }

    function GetPageData(pageNum, pageSize = 5) {
        const SetData = $("#SetPropertyList");
        const Paged = $("#Paged");
        const url = `/Property/GetPropertyList`;
        const data = {
            pageNumber: pageNum,
            pageSize: pageSize
        };

        SetData.empty();
        Paged.empty();

        $.ajax({
            type: 'GET',
            url: url,
            data: data,
            success: (res) => {
                DataBinding(res.Data);
                PaggingTemplate(res.TotalPages, res.CurrentPages);
            },
            error: (err) => {
                console.log(err);
            }
        });
    }

    function PaggingTemplate(totalPage, currentPage) {
        var template = "";
        var TotalPage = totalPage;
        var CurrentPage = currentPage;
        var PageNumberArray = Array();

        var countIncrement = 1;
        for (let i = currentPage; i <= totalPage; i++) {
            PageNumberArray[0] = currentPage;
            if (totalPage !== currentPage && PageNumberArray[countIncrement - 1] !== totalPage) {
                PageNumberArray[countIncrement] = i + 1;
            }
            countIncrement++;
        };
        PageNumberArray = PageNumberArray.slice(0, 5);
        var FirstPage = 1;
        var LastPage = totalPage;
        if (totalPage !== currentPage) {
            var ForwardOne = currentPage + 1;
        }
        var BackwardOne = 1;
        if (currentPage > 1) {
            BackwardOne = currentPage - 1;
        }

        template = `<p>${CurrentPage} of ${TotalPage}</p>`;
           
        template = template + `<ul class="pager">
            <li class="previous"><a href="#" onclick="GetPageData(${FirstPage})"><i class="fa fa-fast-backward"></i>&nbsp;First</a></li>
            <li><select ng-model="pageSize" id="selectedId"><option value="5" selected>5</option><option value="10">10</option><option value="20">20</option></select> </li>
            <li><a href="#" onclick="GetPageData(${BackwardOne})"><i class="glyphicon glyphicon-backward"></i></a>`;

        var numberingLoop = "";
        for (let i = 0; i < PageNumberArray.length; i++) {
            numberingLoop = numberingLoop + `<a class="page-number active" onclick="GetPageData(${PageNumberArray[i]})" href="#">${PageNumberArray[i]}&nbsp;&nbsp;</a>`;
        }
        template = template + numberingLoop + `<a href="#" onclick="GetPageData(${ForwardOne})"><i class="glyphicon glyphicon-forward"></i></a></li>
            <li class="next"><a href="#" onclick="GetPageData(${LastPage})">Last&nbsp;<i class="fa fa-fast-forward"></i></a></li></ul>`;
        $("#Paged").append(template);
        $("#selectedId").change(function () {
            GetPageData(1, $(this).val());
        });
    }
</script>